openapi: 3.0.1
info:
  version: 1.0.0
  title: Forma Core-API documentation
  description: Documentation for Forma's Core-API with all available endpoints, parameters and responses.
externalDocs:
  description: View Forma's Core-API repository
  url: https://github.com/Forma-AT/forma-core
tags:
  - name: user
    description: Authentication and user related endpoints
paths:
  /api/user/auth:
    post:
      tags:
        - user
      summary: Authenticate user
      description: Authenticate user with email address and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: johndoe@example.com
                password:
                  type: string
                  example: tHz421%8dv3}!_bVC63M
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseWithToken'
        '400':
          description: The email address or password is incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/user/forgotPassword:
    post:
      tags:
        - user
      summary: Forgot password
      description: Request a password reset code to the email address
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: johndoe@example.com
      responses:
        '200':
          description: A password reset code has been sent to the email address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
  /api/user:
    put:
      tags:
        - user
      summary: Create a new account
      description: Create a new account with email address, first name, last name and passsword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - firstName
                - lastName
                - password
              properties:
                email:
                  type: string
                  examle: johndoe@example.com
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                password:
                  type: string
                  example: tHz421%8dv3}!_bVC63M
      responses:
        '201':
          description: User account creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseWithToken'
        '400':
          description: The password is too weak, or the email is invalid or in use already
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/user/{userId}:
    get:
      tags:
        - user
      summary: Get user data
      description: Get information about the user, such as email address or name
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          example: dba3d8db-ad67-4fd3-b0b3-9c196721c713
      responses:
        '200':
          description: User data retreived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseWithUser'
        '401':
          description: Authorization token invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The user was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/user/{userId}/verify:
    post:
      tags:
        - user
      summary: Verify account
      description: Verify a user account with the code received via email
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          example: dba3d8db-ad67-4fd3-b0b3-9c196721c713
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
                  example: HEsK1YBaB57Lw0NxqoM24
      responses:
        '200':
          description: Account verification successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
        '404':
          description: The verification code is invalid or expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/user/{userId}/resetPassword:
    post:
      tags:
        - user
      summary: Reset password
      description: Reset the user's password using the code received via email
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          example: dba3d8db-ad67-4fd3-b0b3-9c196721c713
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - password
              properties:
                code:
                  type: string
                  example: cnffAF07MxuPkchQHlsOL
                password:
                  type: string
                  example: SU}{hF70c,)^6w@DKR^7
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
        '400':
          description: The provided password is too weak
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The reset code is invalid or expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        emailConfirmed:
          type: boolean
        createdAt:
          type: number
        updatedAt:
          type: number
    OkResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
    OkResponseWithToken:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        token:
          type: string
          example: eyJhbGciOiJ...98vI6bxl1s94xI
    OkResponseWithUser:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        user:
          $ref: '#/components/schemas/User'
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
